{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["CharacterCard","props","className","onClick","click","id","alt","name","src","image","Wrapper","children","Header","score","hiScore","App","state","characters","randomize","i","length","j","Math","floor","random","temp","handleCorrectGuess","newCharacter","newScore","newHiScore","max","setState","handleIncorrectGuess","map","character","isClicked","alert","guessedCorrectly","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"kyCAaeA,MAVf,SAAuBC,GACnB,OACI,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,MAAMH,EAAMI,MACnD,yBAAKH,UAAU,iBACX,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,aCAlCC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCI1BC,MALf,SAAgBX,GACd,OAAO,gCAAQ,yBAAKC,UAAU,YAAYI,IAAI,SAASE,IAAI,wBAC3D,yBAAKN,UAAU,SAAf,UAA+BD,EAAMY,OAAY,yBAAKX,UAAU,WAAf,aAAoCD,EAAMa,W,6jBCuF9EC,E,2MAnFbC,MAAQ,CACNC,aACAJ,MAAO,EACPC,QAAS,G,EAQXI,UAAY,SAAAD,GAEV,IADA,IAAIE,EAAIF,EAAWG,OAAS,EACrBD,EAAI,GAAG,CACZ,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOR,EAAWE,GACxBF,EAAWE,GAAKF,EAAWI,GAC3BJ,EAAWI,GAAKI,EAChBN,IAEF,OAAOF,G,EAITS,mBAAqB,SAAAC,GAAiB,IAAD,EACR,EAAKX,MAAxBF,EAD2B,EAC3BA,QACFc,EAF6B,EAClBf,MACQ,EACnBgB,EAAaP,KAAKQ,IAAIF,EAAUd,GAEtC,EAAKiB,SAAS,CACZd,WAAY,EAAKC,UAAUS,GAC3Bd,MAAOe,EACPd,QAASe,K,EAKbG,qBAAuB,SAAAf,GACrB,EAAKc,SAAS,CACZd,WAAY,EAAKC,UAAU,EAAKF,MAAMC,WAAWgB,KAAK,SAAAC,GAAe,OAAO,EAAP,GAAYA,EAAZ,CAAuBC,WAAY,QACxGtB,MAAO,IAETuB,MAAM,qD,EAGRhC,MAAQ,SAAAC,GACN,IAAIgC,GAAmB,EACjBV,EAAe,EAAKX,MAAMC,WAAWgB,KAAI,SAAAC,GAC7C,IAAMP,EAAY,KAAQO,GAO1B,OANIP,EAAatB,KAAOA,IACjBsB,EAAaQ,YAChBR,EAAaQ,WAAY,EACzBE,GAAmB,IAGhBV,KAETU,EACI,EAAKX,mBAAmBC,GACxB,EAAKK,qBAAqBL,I,mFApD9BW,KAAKP,SAAS,CAAEd,WAAYqB,KAAKpB,UAAUoB,KAAKtB,MAAMC,gB,+BAuD9C,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQJ,MAAOyB,KAAKtB,MAAMH,MAAOC,QAASwB,KAAKtB,MAAMF,UACpDwB,KAAKtB,MAAMC,WAAWgB,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACEK,IAAKL,EAAU7B,GACfA,GAAI6B,EAAU7B,GACdE,KAAM2B,EAAU3B,KAChBE,MAAOyB,EAAUzB,MACjBL,MAAO,EAAKA,gB,GA1ENoC,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7f59c71a.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\"\r\n\r\nfunction CharacterCard(props) {\r\n    return (\r\n        <div className=\"card\" onClick={() => props.click(props.id)}>\r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nfunction Header(props) {\r\n  return <header><img className=\"imgHeader\" alt=\"header\" src=\"./images/header.jpg\"></img>\r\n  <div className=\"score\">Score: {props.score}</div><div className=\"hiScore\">Hi Score: {props.hiScore}</div></header>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport CharacterCard from './components/CharacterCard';\nimport characters from './images.json'\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters,\n    score: 0,\n    hiScore: 0,\n  };\n\n  componentDidMount() {\n    this.setState({ characters: this.randomize(this.state.characters) });\n  }\n\n  //randomize characters\n  randomize = characters => {\n    let i = characters.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = characters[i];\n      characters[i] = characters[j];\n      characters[j] = temp;\n      i--;\n    }\n    return characters;\n  };\n\n  //when guessing correctly\n  handleCorrectGuess = newCharacter => {\n    const { hiScore, score } = this.state;\n    const newScore = score + 1;\n    const newHiScore = Math.max(newScore, hiScore);\n\n    this.setState({\n      characters: this.randomize(newCharacter),\n      score: newScore,\n      hiScore: newHiScore\n    });\n  };\n\n  //function for when you click the same image twice\n  handleIncorrectGuess = characters => {\n    this.setState({\n      characters: this.randomize(this.state.characters.map( character => { return { ...character, isClicked : false } })),\n      score: 0\n    });\n    alert(\"You clicked the same image! Game over try again!\");\n  };\n\n  click = id => {\n    let guessedCorrectly = false;\n    const newCharacter = this.state.characters.map(character => {\n      const newCharacter = { ...character };\n      if (newCharacter.id === id) {\n        if (!newCharacter.isClicked) {\n          newCharacter.isClicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newCharacter;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newCharacter)\n      : this.handleIncorrectGuess(newCharacter);\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} hiScore={this.state.hiScore}></Header>\n        {this.state.characters.map(character => (\n          <CharacterCard\n            key={character.id}\n            id={character.id}\n            name={character.name}\n            image={character.image}\n            click={this.click}\n          />\n        )\n        )\n        }\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}